package ir.at.todolist.feature.homeimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.at.todolist.data.repo.Repositoryimport ir.at.todolist.data.Taskimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.collectimport kotlinx.coroutines.flow.flowimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass MainViewModel @Inject constructor(private val repository: Repository) : ViewModel(){    val listTasks : Flow<List<Task>> = flow {        repository.getAllTasks().collect {            emit(it)        }    }    fun updateTask(task: Task){        viewModelScope.launch(Dispatchers.IO){            repository.updateTask(task)        }    }}